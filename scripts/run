#!/bin/bash

PROJECT_PATH="$MR_PROJECT_PATH"
ASSIGNMENT="a1"

JAR="parallel-processing-1.0-SNAPSHOT-jar-with-dependencies.jar"

SCRIPTS_PATH="$PROJECT_PATH/scripts"
JAR_PATH="$PROJECT_PATH/target/$JAR"
NUM_OF_ARGS="$#"

if [ $NUM_OF_ARGS -eq 0 ]; then
    echo "Usage : run version_number"    
    exit 0;
fi
VERSION=$1

function cleanup(){
    VERSION=$1
    $SCRIPTS_PATH/hrm $ASSIGNMENT "output/v$VERSION"    
}

function input_path(){
   VERSION=$1 
   if [ $VERSION -eq 1 ]; then
       INPUT_PATH="$2"
   else
       INPUT_PATH="/$ASSIGNMENT/input"
   fi 
}


function output_path(){
   VERSION=$1
   if [ $VERSION -eq 1 ]; then
       OUTPUT_PATH="$3"
   else       
       OUTPUT_PATH="/$ASSIGNMENT/output/v$VERSION"
   fi  
}

function generate_output(){
    `hadoop fs -getmerge $OUTPUT_PATH v$VERSION-out`
}




case $VERSION in
    4)
        if [ $NUM_OF_ARGS -ne 2 ]; then
            echo "Usage : run 4 fibbo_number"
            exit 0;
        fi     
        FIBBO=$2
        cleanup $VERSION
        input_path $@
        output_path $@
        hadoop jar $JAR_PATH $VERSION $FIBBO $INPUT_PATH $OUTPUT_PATH        
        generate_output;
    ;;
    3|2)
        cleanup $VERSION        
        input_path $@
        output_path $@
        hadoop jar $JAR_PATH $VERSION $INPUT_PATH $OUTPUT_PATH     
        generate_output;
    ;;
    1)
        if [ $NUM_OF_ARGS -ne 3 ]; then
            echo "Usage : run 1 input_file output_file"
            exit 0;
        fi         
        input_path $@
        output_path $@
        hadoop jar $JAR_PATH $VERSION $INPUT_PATH $OUTPUT_PATH
    ;;
    *)
        echo "version should be a number between 1 and 4"
        exit 0;
    ;;
esac


